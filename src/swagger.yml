openapi: 3.0.0
info:
  title: API para Github data con Neo4j, nodejs y expressJS
  description: Esta API integra datos de la API GraphQL de GitHub con una base de datos Neo4j para proporcionar extracción de datos avanzados que no están disponibles directamente a través de GitHub. Utiliza consultas POST para recolectar y almacenar información detallada sobre perfiles de usuario, seguidores, repositorios, issues y asignaciones de miembros a issues desde GitHub. Las consultas GET aprovechan estos datos para ofrecer estadísticas profundas y análisis complejos, permitiendo realizar búsquedas con filtros avanzados y agrupaciones que van más allá de las capacidades del estándar de la API de GitHub.
  version: 1.0.0
servers:
  - url: http://localhost:3000
paths:
  /user:
    post:
      summary: Crear un usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
      responses:
        '200':
          description: Solicitud finalizada exitosamente
        '400':
          description: Solicitud incorrecta
        '500':
          description: Error interno del servidor
  /user/followers/following:
    post:
      summary: Crear un usuarios con todos los perfiles a los que sigue y que le siguen
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
      responses:
        '200':
          description: Solicitud finalizada exitosamente
        '400':
          description: Solicitud incorrecta
        '500':
          description: Error interno del servidor
  /repositories:
    post:
      summary: Crear repositorios del usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
      responses:
        '200':
          description: Solicitud finalizada exitosamente
        '400':
          description: Solicitud incorrecta
        '500':
          description: Error interno del servidor
  /repositories/collaborators:
    post:
      summary: Crear repositorios del usuario y usuarios de los colaboradores
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
      responses:
        '200':
          description: Solicitud finalizada exitosamente
        '400':
          description: Solicitud incorrecta
        '500':
          description: Error interno del servidor
  /repositories/issues/assignees:
    post:
      summary: Crear repositorios del usuario con todas sus issues y todos los usuarios asignados a dichas issues
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
      responses:
        '200':
          description: Solicitud finalizada exitosamente
        '400':
          description: Solicitud incorrecta
        '500':
          description: Error interno del servidor
